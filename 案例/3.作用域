// 遇到报错可以忽略，接着执行

//1
  console.log(b);
  b();
  var b = 1;
  function b() {
    console.log(1);
  }
  b();

//2
  function f1() {
    console.log(a); // f()
    var a = 1;
    return a;
    function a() {
    }
  }
  f1();

//3

  f2();
  f3();
  var x1 = x2 = 10;
  function f2() {
    console.log(x1);
  }
  function f3() {
    console.log(x2);
  }
//4
    console.log(a);
    var a = 13;
    function fn() {
        console.log(a);
        var a = 1;
    }
    fn();
    console.log(a);

----
//5
    console.log(a);
    var a = 13;
    function fn1() {
        console.log(a);
        a = 1;
    }
    console.log(a);
//6
    console.log(a);
    a = 13;    //window.a=13
    function fn() {
        console.log(a);
        a = 1;
    }
    fn();
    console.log(a);
// 7
    var foo = 1;
    function bar() {
        if (!foo) {
            var foo = 10
        }
        console.log(foo);
    }
    bar();
// 8
    function f5() {
        f=ff();
        return f;
        function ff() {
            return "f" in window;
        };
        var f;
    }
    console.log(f5());
// 9
        var a = b = c = [1, 2, 3, 4];
        b = 9;
        a[1] = 0;
        console.log(b[0]);
        a = [1, 2, 3, 4];
        c = [1, 2, 3, 4];
        a[0] = b;
        console.log(c);
        console.log(a);
// 10
        var ary = [1, 2, 3, 4];
        function ff(ary) {
            ary[0] = 0;
            ary = [0];
            ary[0] = 100;
            return ary
        }
        var s = ff(ary);
        console.log(ary);
        console.log(s);
//11
        var a = 10, b = 11, c = 12;
        function test(a) {
            a = 1;
            var b = 2;
            c = 3;
        }
        test(10);
        console.log(a);
        console.log(b);
        console.log(c);
//12   在块级作用域下var和function是不可以重名的
        if (!("aa" in window)) {
            var aa = 1;
            function aa() {
                console.log(aa)
            }
        }
        console.log(aa);

---
//13
        var a = 4;
        function b(x, y, b) {
            console.log(a);//4
            arguments[2] = 10;// [1,2,10]
            console.log(a);//4
        }
        a = b(1, 2, 3);
        console.log(a);
//14.
        var fs = "hello";
        (function (fs) { // fs='hello' // var fs
            console.log(fs);// 'hello'
            var fs = fs || "world"; //''
            console.log(fs); // 'hello'
        })(fs);
        console.log(fs);
//15.
        var a = 9;
        function ss() {
            a = 0;
            return function (b) {
                return b + (a++)
            }
        }
        var f = ss();
        var m = f(5);
        console.log(m);
        var n = ss()(5);
        console.log(n);
        var x = f(5);
        console.log(x);
        console.log(a);
---
// 16
    var i =1 ;
    function fn(i){
        return function (n){
            console.log(n+(++i))
        }
    }
    var f = fn(2);
    f(3)
    fn(5)(6)
    fn(7)(8)
    f(4)

// 17

    var i =2
    function fn (){
        i +=2
        return function (n){
            console.log(n+(--n))
        }
    }
    var f =fn();
    f();
    f(3)
    fn()(2);
    fn()(3);
    f(4)